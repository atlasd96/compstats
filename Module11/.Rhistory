})
combs.b <- lapply(seq(1, length(survival.b)), function(i) combinations(n=length(survival.b), r=i))
combs.s <- lapply(seq(length(survival.b), 1), function(i) combinations(n=length(survival.b), r=i))
lapply(seq_along(combs), function(j){
c(survival.b[combs.b[[j]][r, ]], survival.s[combs.s[[j]][r, ]])
sapply(seq(1, nrow(combs[[j]]))m function(r){
c(survival.b[combs.b[[j]][r, ]], survival.s[combs.s[[j]][r, ]])
}
})
lapply(seq_along(combs), function(j){
c(survival.b[combs.b[[j]][r, ]], survival.s[combs.s[[j]][r, ]])
sapply(seq(1, nrow(combs[[j]])), function(r){
c(survival.b[combs.b[[j]][r, ]], survival.s[combs.s[[j]][r, ]])
}
})
lapply(seq_along(combs), function(j){
sapply(seq(1, nrow(combs[[j]])), function(r){
c(survival.b[combs.b[[j]][r, ]], survival.s[combs.s[[j]][r, ]])
})
})
knitr::opts_chunk$set(echo = TRUE)
w_i <- rep(1, 3)
h_i <- c(-.5, -1/3, -1/12)
f2prime <- c(0, 1/4, 3/8, 0)
A <- (f2prime[2:4] - f2prime[1:3]) / 6
B <- f2prime / 2
C <- h_i - w_i (f2prime[2:4] - 2 * f2prime[1:3]) / 6
w_i <- rep(1, 3)
h_i <- c(-.5, -1/3, -1/12)
f2prime <- c(0, 1/4, 3/8, 0)
A <- (f2prime[2:4] - f2prime[1:3]) / 6
B <- f2prime / 2
C <- h_i - w_i * (f2prime[2:4] - 2 * f2prime[1:3]) / 6
D <- c(1, 1/2, 1/3, 1/4)
A
B
C
D
1/8
1/86
1/16
data <- scan("Orthogonal.txt")
lines(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x) (128 * x^3) / (21 * pi) + (32 * x^2) / (pi) + (8 * x) / (pi) + 1
X <- seq(-1, 1, .01)
hist(data)
lines(X, approx(X))
hist(data, freq=F)
data <- scan("Orthogonal.txt")
approx <- function(x) (128 * x^3) / (21 * pi) + (32 * x^2) / (pi) + (8 * x) / (pi) + 1
X <- seq(-1, 1, .01)
hist(data, freq=F)
lines(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x) (- 128 * x^3) / (21 * pi) + (32 * x^2) / (pi) + (8 * x) / (pi) + 1
X <- seq(-1, 1, .01)
hist(data, freq=F)
lines(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x) (128 * (x^3 - 1/2)) / (21 * pi) + (32 * (x^2 - 1/4)) / (pi) + (8 * x) / (pi) + 1
X <- seq(-1, 1, .01)
hist(data, freq=F)
lines(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x) (128 * (x^3 - 1/2)) / (21 * pi) + (32 * (x^2 - 1/4)) / (pi) + (8 * x) / (pi) + 1
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)  - (128 * (x^3 - 1/2)) / (21 * pi) + (32 * (x^2 - 1/4)) / (pi) + (8 * x) / (pi) + 1
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)  - (128 * (x^3 - 1/2)) / (21 * pi) - (32 * (x^2 - 1/4)) / (pi) + (8 * x) / (pi) + 1
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)  - (128 * (x^3 - 1/2)) / (21 * pi) - (32 * (x^2 - 1/4)) / (pi) + (8 * x) / (pi) + 4
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)  - (128 * (x^3 - 1/2)) / (21 * pi) - (32 * (x^2 - 1/4)) / (pi) + (8 * x) / (pi) + 2 / pi
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)   (128 * (x^3 - 1/2)) / (21 * pi)  + (32 * (x^2 - 1/4)) / (pi) + (8 * x) / (pi) + 2 / pi
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)   -1.62 * (128 * (x^3 - 1/2)) / (21 * pi)  + .8 * (32 * (x^2 - 1/4)) / (pi) + 1.0696 * 2 / pi
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)   -1.62 * (128 * (x^3 - 1/2)) / (21 * pi)  + .8 * (32 * (x^2 - 1/4)) / (pi) + 1.0696 * 2 / pi
X <- seq(-1, 1, .01)
hist(data, freq=F)
lines(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)  -1 * (-1.62 * (128 * (x^3 - 1/2)) / (21 * pi)  + .8 * (32 * (x^2 - 1/4)) / (pi) + 1.0696 * 2 / pi)
X <- seq(-1, 1, .01)
hist(data, freq=F)
lines(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)  -1 * (-1.62 * (128 * (x^3 - 1/2)) / (21 * pi)  + .8 * (32 * (x^2 - 1/4)) / (pi) + 1.0696 * 2 / pi)
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)   (1.62 * (128 * (x^3 - 1/2)) / (21 * pi)  + .8 * (32 * (x^2 - 1/4)) / (pi) + 1.0696 * 2 / pi)
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)   (1.62 * (128 * (x^3 - 1/2)) / (21 * pi)  + .8 * (32 * (x^2 - 1/4)) / (pi) + 1.0696 )
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)   -1 * (1.62 * (128 * (x^3 - 1/2)) / (21 * pi)  + .8 * (32 * (x^2 - 1/4)) / (pi) + 1.0696 )
X <- seq(-1, 1, .01)
hist(data, freq=F)
plot(X, approx(X))
data <- scan("Orthogonal.txt")
approx <- function(x)   -1 * (1.62 * (128 * (x^3 - 1/2)) / (21 * pi)  + .8 * (32 * (x^2 - 1/4)) / (pi) + 1.0696 )
X <- seq(-1, 1, .01)
hist(data, freq=F)
lines(X, approx(X))
setwd("~/Documents/JHU/compstats/Module11")
data <- scan("./F12.txt")
hist(data)
sd(data)
silvermans_rule_of_thumb <- function(data){
h <- (4 / (3 * length(data)))^(1/5) * sd(data)
return(h)
}
silvermans_rule_of_thumb(data)
data <- log(scan("./F12.txt"))
silvermans_rule_of_thumb <- function(data){
h <- (4 / (3 * length(data)))^(1/5) * sd(data)
return(h)
}
silvermans_rule_of_thumb(data)
sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h)
?dnorm
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data)
lines(f_hat)
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data)
plot(f_hat)
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data, freq=F)
plot(f_hat)
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data, freq=F)
lines(f_hat)
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data, freq=F)
lines(f_hat)
hist(data, freq=F)
lines(f_hat)
plot(f_hat)
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data, freq=F)
lines(X, f_hat)
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data, freq=F)
lines(X, f_hat)
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data, freq=F, ylim=c(0, .6))
lines(X, f_hat)
X
diff(seq(1, 10))
R <- function(f, X){
return(sum(f(X)^2))
}
return(sum(f_x^2))
R <- function(f_x){
return(sum(f_x^2))
}
f_2prime <- diff(diff(f_hat))
R(f_2prime)
R_f <- sum(dnorm(seq(min(data), max(data), .01))^2)
R_f
f_2prime <- diff(diff(f_hat) / diff(X)) / diff(X)
diff(f_hat) / diff(X))
diff(f_hat)
diff(f_hat) / diff(X)
plot(diff(f_hat) / diff(X))
plot(X, diff(f_hat) / diff(X))
plot(X[2:], diff(f_hat) / diff(X))
plot(X[2:length(X)], diff(f_hat) / diff(X))
plot(data)
hist(data)
plot(X[2:length(X)], diff(f_hat) / diff(X))
derivative <- function(f_x, x){
return(diff(f_x) / diff(X))
}
fprime <- derivative(f_hat, X)
f2prime <- derivative(fprime, X[2:length(X)])
fprime <- derivative(f_hat, X)
length(X)
length(fprime)
length(X[2:length(X)])
f2prime <- derivative(fprime, X[2:length(X)])
R <- function(f_x){
return(sum(f_x^2))
}
R_f <- sum(dnorm(seq(min(data), max(data), .01))^2)
derivative <- function(f_x, x){
return(diff(f_x) / diff(x))
}
fprime <- derivative(f_hat, X)
f2prime <- derivative(fprime, X[2:length(X)])
f_2prime <-
R(f_2prime)
R_f2prime <- sum(f2prime^2)
R_f2prime
R_k <- sum(dnorm(seq(min(data), max(data), .01))^2)
R_f2prime <- sum(f2prime^2)
n <- length(data)
h <- (R_k / (n * R_f2prime))^.2
h
get_kernel_density(X, data, dnorm, h=.202)
X
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=.202))
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=.202))
hist(data, freq=F)
lines(X, f_hat)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=.202))
hist(data, freq=F, ylim=c(0, .6))
lines(X, f_hat)
data <- log(scan("./F12.txt"))
silvermans_rule_of_thumb <- function(data){
h <- (4 / (3 * length(data)))^(1/5) * sd(data)
return(h)
}
silvermans_rule_of_thumb(data)
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data, freq=F, ylim=c(0, .6))
lines(X, f_hat)
derivative <- function(f_x, x){
return(diff(f_x) / diff(x))
}
fprime <- derivative(f_hat, X)
f2prime <- derivative(fprime, X[2:length(X)])
R_k <- sum(dnorm(seq(min(data), max(data), .01))^2)
R_f2prime <- sum(f2prime^2)
n <- length(data)
h <- (R_k / (n * R_f2prime))^.2
f_hat_sj <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=.202))
hist(data, freq=F, ylim=c(0, .6))
lines(X, f_hat, col='red')
lines(X, f_hat_sj, col='blue')
R_k
n <- length(data)
3 * (R_k / (35 * n))^(1/5) * sd(data)
3 * ((R_k / (35 * n))^(1/5)) * sd(data)
f_hat_sj <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=h))
data <- log(scan("./F12.txt"))
silvermans_rule_of_thumb <- function(data){
h <- (4 / (3 * length(data)))^(1/5) * sd(data)
return(h)
}
silvermans_rule_of_thumb(data)
get_kernel_density <- function(x, data, K, h){
n <- length(data)
return(sum(sapply(data, function(X_i){
return(K((x - X_i) / h))
})) / (n  * h))
}
X <- seq(min(data), max(data), .01)
f_hat <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=silvermans_rule_of_thumb(data)))
hist(data, freq=F, ylim=c(0, .6))
lines(X, f_hat)
derivative <- function(f_x, x){
return(diff(f_x) / diff(x))
}
fprime <- derivative(f_hat, X)
f2prime <- derivative(fprime, X[2:length(X)])
R_k <- sum(dnorm(seq(min(data), max(data), .01))^2)
R_f2prime <- sum(f2prime^2)
n <- length(data)
h <- (R_k / (n * R_f2prime))^.2
f_hat_sj <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=.202))
hist(data, freq=F, ylim=c(0, .6))
lines(X, f_hat, col='red')
lines(X, f_hat_sj, col='blue')
n <- length(data)
h <- 3 * ((R_k / (35 * n))^(1/5)) * sd(data)
f_hat_tmsp <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=h))
hist(data, freq=F, ylim=c(0, .6))
lines(X, f_hat, col='red')
lines(X, f_hat_sj, col='blue')
lines(X, f_hat_tmsp, col='green')
?dunif
dunif(.5, 0, 1)
dunif(.5)
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(abs(x)), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(abs(x)), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
hist(data, freq=F)
lines(f_hat_unif, main="Uniform Kernel Density Estimation")
plot(f_hat_unif)
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(abs(x)), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
hist(data, freq=F)
lines(X, f_hat_unif, main="Uniform Kernel Density Estimation")
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(abs(x)), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
hist(data, freq=F)
lines(X, f_hat_unif, main="Uniform Kernel Density Estimation")
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(abs(x)), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
hist(data, freq=F, ylim=c(0, 6))
lines(X, f_hat_unif, main="Uniform Kernel Density Estimation")
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(abs(x)), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
hist(data, freq=F, ylim=c(0, .6))
lines(X, f_hat_unif, main="Uniform Kernel Density Estimation")
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(abs(x)), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
hist(data, freq=F, ylim=c(0, .9))
lines(X, f_hat_unif, main="Uniform Kernel Density Estimation")
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(x, -1, 1)))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(x, -1, 1)), 0)
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(x, -1, 1), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
hist(data, freq=F, ylim=c(0, .9))
lines(X, f_hat_unif, main="Uniform Kernel Density Estimation")
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(x, -1, 1), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
hist(data, freq=F, ylim=c(0, .6))
lines(X, f_hat_unif, main="Uniform Kernel Density Estimation")
h <- .202
# Uniform density with zero indictor.
k_uniform <- function(x){
return(ifelse(abs(x) < 1, dunif(x, -1, 1), 0))
}
f_hat_unif <- sapply(X, function(x) get_kernel_density(x, data, k_uniform, h=h))
hist(data, freq=F, ylim=c(0, .6), main="Uniform Kernel Density Estimation")
lines(X, f_hat_unif)
epach <- function(z) .75 * (1 - z^2)
f_hat_epach <- sapply(X, function(x) get_kernel_density(x, data, epach, h=h))
hist(data, freq=F, ylim=c(0, .6), main="Epanechnikov Kernel Density Estimation")
lines(X, f_hat_unif, "green")
f_hat_norm <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=h))
hist(data, freq=F, ylim=c(0, .6), main="Normal Kernel Density Estimation")
lines(X, f_hat_unif, "green")
f_hat_norm <- sapply(X, function(x) get_kernel_density(x, data, dnorm, h=h))
hist(data, freq=F, ylim=c(0, .6), main="Normal Kernel Density Estimation")
lines(X, f_hat_unif, col="green")
lines(X, f_hat_norm, col="red")
epach <- function(z) .75 * (1 - z^2)
f_hat_epach <- sapply(X, function(x) get_kernel_density(x, data, epach, h=h))
hist(data, freq=F, ylim=c(0, .6), main="Epanechnikov Kernel Density Estimation")
lines(X, f_hat_unif, col="green")
lines(X, f_hat_norm, col="red")
lines(X, f_hat_epach, col='blue')
epach <- function(z) .75 * (1 - z^2)
f_hat_epach <- sapply(X, function(x) get_kernel_density(x, data, epach, h=h))
hist(data, freq=F, ylim=c(0, .6), main="Epanechnikov Kernel Density Estimation")
lines(X, f_hat_unif, col="green")
lines(X, f_hat_norm, col="red")
lines(X, f_hat_epach, col='black')
epach <- function(z) .75 * (1 - z^2)
f_hat_epach <- sapply(X, function(x) get_kernel_density(x, data, epach, h=h))
hist(data, freq=F, ylim=c(0, .6), main="Epanechnikov Kernel Density Estimation")
# lines(X, f_hat_unif, col="green")
# ines(X, f_hat_norm, col="red")
lines(X, f_hat_epach, col='black')
f_hat_epach
epach <- function(z) if(abs(z) < 1, .75 * (1 - z^2), 0)
epach <- function(z) ifelse(abs(z) < 1, .75 * (1 - z^2), 0)
f_hat_epach <- sapply(X, function(x) get_kernel_density(x, data, epach, h=h))
hist(data, freq=F, ylim=c(0, .6), main="Epanechnikov Kernel Density Estimation")
# lines(X, f_hat_unif, col="green")
# ines(X, f_hat_norm, col="red")
lines(X, f_hat_epach, col='black')
epach <- function(z) ifelse(abs(z) < 1, .75 * (1 - z^2), 0)
f_hat_epach <- sapply(X, function(x) get_kernel_density(x, data, epach, h=h))
hist(data, freq=F, ylim=c(0, .6), main="Epanechnikov Kernel Density Estimation")
lines(X, f_hat_unif, col="green")
lines(X, f_hat_norm, col="red")
lines(X, f_hat_epach, col='black')
