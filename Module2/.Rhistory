colnames(cleaned_sat)
lm(SAT_TOT~gender, data = cleaned_sat)
?lm
justGender <- lm(SAT_TOT~gender, subset = (! is.na(gender)) , data = cleaned_sat)
justGender
summary(justGender)
justGender <- lm(SAT_TOT~as.factor(gender), subset = (! is.na(gender)) , data = cleaned_sat)
summary(justGender)
boxplot(SAT_TOT, by = gender, data=cleaned_sat)
boxplot(cleaned_sat$SAT_TOT, by = cleaned_sat$gender)
?boxplot
boxplot(SAT_TOT~gender, data=cleaned_set)
boxplot(SAT_TOT~gender, data=cleaned_sat)
boxplot(SAT_TOT~gender, data=cleaned_sat, na.omit)
boxplot(SAT_TOT~gender, data=cleaned_sat)
boxplot(SAT_TOT~ethnicity, data=cleaned_sat)
plot(SAT_TOT~ethnicity, data=cleaned_sat)
plot(SAT_TOT~ethnicity+gender, data=cleaned_sat)
plot(SAT_TOT~ethnicity, data=cleaned_sat, col=gender)
plot(ethnicity~SAT_TOT, data=cleaned_sat, col=gender)
mydata <- scale(cleaned_sat)
mydata
mydata <- scale(cleaned_sat[,5])
mydata
cleaned_sat[,5]
sat_scores
aggregate(SATM~gender+ethnicity, data=cleaned_sat)
aggregate(SATM~gender+ethnicity, data=cleaned_sat, fun=mean)
aggregate(SATM~gender+ethnicity, data=cleaned_sat, FUN=mean)
genderAggM <- aggregate(SATM~gender, data=cleaned_sat, FUN=mean)
genderAggM
for(i in 1:nrow(cleaned_sat)){
satmNA <- is.na(cleaned_sat$SATM[i])
satrNA <- is.na(cleaned_sat$SATR[i])
ethNA <- is.na(cleaned_sat$ethnicity[i])
genNA <- is.na(cleaned_sat$gender[i])
if(ethNA){
if(satmNA){
cleaned_sat$SATM[i] <- ethAggM[cleaned_sat$ethnicity[i], 2]
}
if(satrNA){
cleaned_sat$SATR[i] <- ethAggR[cleaned_sat$ethnicity[i], 2]
}
}
if(genNA){
if(satmNA){
cleaned_sat$SATM[i] <- genderAggM[cleaned_sat$gender[i], 2]
}
if(satrNA){
cleaned_sat$SATR[i] <- genderAggR[cleaned_sat$gender[i], 2]
}
}
}
bothAggM <- aggregate(SATM~gender+ethnicity, data=cleaned_sat, FUN=mean)
ethAggM <- aggregate(SATM~ethnicity, data=cleaned_sat, FUN=mean)
genderAggM <- aggregate(SATM~gender, data=cleaned_sat, FUN=mean)
bothAggR <- aggregate(SATR~gender+ethnicity, data=cleaned_sat, FUN=mean)
ethAggR <- aggregate(SATR~ethnicity, data=cleaned_sat, FUN=mean)
genderAggR <- aggregate(SATR~gender, data=cleaned_sat, FUN=mean)
for(i in 1:nrow(cleaned_sat)){
satmNA <- is.na(cleaned_sat$SATM[i])
satrNA <- is.na(cleaned_sat$SATR[i])
ethNA <- is.na(cleaned_sat$ethnicity[i])
genNA <- is.na(cleaned_sat$gender[i])
if(ethNA){
if(satmNA){
cleaned_sat$SATM[i] <- ethAggM[cleaned_sat$ethnicity[i], 2]
}
if(satrNA){
cleaned_sat$SATR[i] <- ethAggR[cleaned_sat$ethnicity[i], 2]
}
}
if(genNA){
if(satmNA){
cleaned_sat$SATM[i] <- genderAggM[cleaned_sat$gender[i], 2]
}
if(satrNA){
cleaned_sat$SATR[i] <- genderAggR[cleaned_sat$gender[i], 2]
}
}
}
cleaned_sat$SATM
ethAggM
cleaned_sat <- sat_scores[! (is.na(sat_scores$ethnicity) & is.na(sat_scores$gender)),]
cleaned_sat <- sat_scores[! (is.na(sat_scores$ethnicity) & is.na(sat_scores$gender)),]
bothAggM <- aggregate(SATM~gender+ethnicity, data=cleaned_sat, FUN=mean)
ethAggM <- aggregate(SATM~ethnicity, data=cleaned_sat, FUN=mean)
genderAggM <- aggregate(SATM~gender, data=cleaned_sat, FUN=mean)
bothAggR <- aggregate(SATR~gender+ethnicity, data=cleaned_sat, FUN=mean)
ethAggR <- aggregate(SATR~ethnicity, data=cleaned_sat, FUN=mean)
genderAggR <- aggregate(SATR~gender, data=cleaned_sat, FUN=mean)
for(i in 1:nrow(cleaned_sat)){
satmNA <- is.na(cleaned_sat$SATM[i])
satrNA <- is.na(cleaned_sat$SATR[i])
ethNA <- is.na(cleaned_sat$ethnicity[i])
genNA <- is.na(cleaned_sat$gender[i])
if(genNA){
if(satmNA){
cleaned_sat$SATM[i] <- ethAggM[cleaned_sat$ethnicity[i], 2]
}
if(satrNA){
cleaned_sat$SATR[i] <- ethAggR[cleaned_sat$ethnicity[i], 2]
}
}
if(ethNA){
if(satmNA){
cleaned_sat$SATM[i] <- genderAggM[cleaned_sat$gender[i], 2]
}
if(satrNA){
cleaned_sat$SATR[i] <- genderAggR[cleaned_sat$gender[i], 2]
}
}
}
cleaned_sat$SATM
bothAggM
cleaned_sat[cleaned_sat$gender == 2 & cleaned_sat$ethnicity == 1, ]
options(scipen=9999)
cleaned_sat[cleaned_sat$gender == 2 & cleaned_sat$ethnicity == 1, ]
sat_scores[sat_scores$user_id == 242614,]
sat_scores$SATM > 800
sat_scores$SATM > 800 | sat_scores$SATR > 800
sat_scores[sat_scores$SATM > 800 | sat_scores$SATR > 800,]
sat_scores[sat_scores$SATM > 800 | sat_scores$SATR > 800,]
cleaned_sat[cleaned_sat$SATM > 800 | cleaned_sat$SATR > 800,]
cleaned_sat[cleaned_sat$SATM > 800 | cleaned_sat$SATR > 800,]
cleaned_sat$SATM > 800
cleaned_sat$SATM > 800 & is.na(cleaned_sat$SATM)
! is.na(cleaned_sat$SATM) & cleaned_sat$SATM > 800
! is.na(cleaned_sat$SATM) & ! cleaned_sat$SATM > 800
new_cleaned <- cleaned_sat[! is.na(cleaned_sat$SATM) & ! cleaned_sat$SATM > 800,]
new_cleaned
new_cleaned <- cleaned_sat[(! is.na(cleaned_sat$SATM) & ! cleaned_sat$SATM > 800) & (! is.na(cleaned_sat$SATR) & ! cleaned_sat$SATR > 800) ,]
new_cleaned
bothAggM <- aggregate(SATM~gender+ethnicity, data=new_cleaned, FUN=mean)
ethAggM <- aggregate(SATM~ethnicity, data=new_cleaned, FUN=mean)
genderAggM <- aggregate(SATM~gender, data=new_cleaned, FUN=mean)
bothAggR <- aggregate(SATR~gender+ethnicity, data=new_cleaned, FUN=mean)
ethAggR <- aggregate(SATR~ethnicity, data=new_cleaned, FUN=mean)
genderAggR <- aggregate(SATR~gender, data=new_cleaned, FUN=mean)
bothAggM
bothAggR
for(i in 1:nrow(new_cleaned)){
satmNA <- is.na(new_cleaned$SATM[i]) | (new_cleaned$SATM[i]) > 800
satrNA <- is.na(new_cleaned$SATR[i]) | (new_cleaned$SATR[i]) > 800
ethNA <- is.na(new_cleaned$ethnicity[i])
genNA <- is.na(new_cleaned$gender[i])
if(genNA){
if(satmNA){
new_cleaned$SATM[i] <- ethAggM[new_cleaned$ethnicity[i], 2]
}
if(satrNA){
new_cleaned$SATR[i] <- ethAggR[new_cleaned$ethnicity[i], 2]
}
}
if(ethNA){
if(satmNA){
new_cleaned$SATM[i] <- genderAggM[new_cleaned$gender[i], 2]
}
if(satrNA){
new_cleaned$SATR[i] <- genderAggR[new_cleaned$gender[i], 2]
}
}
if(!(genNA | ethNA)){
if(satmNA){
new_cleaned$SATM[i] <- bothAggM[new_cleaned$gender[i], 3]
}
if(satrNA){
new_cleaned$SATR[i] <- bothAggR[new_cleaned$gender[i], 3]
}
}
}
new_cleaned
sum(cleaned_sat$SATM > 800, na.rm = TRUE)
sum(cleaned_sat$SATR > 800, na.rm = TRUE)
new_cleaned <- cleaned_sat[(is.na(cleaned_sat$SATM) | cleaned_sat$SATM <= 800) & (is.na(cleaned_sat$SATR) | cleaned_sat$SATR <= 800),]
new_cleaned
new_cleaned
bothAggM <- aggregate(SATM~gender+ethnicity, data=new_cleaned, FUN=mean)
ethAggM <- aggregate(SATM~ethnicity, data=new_cleaned, FUN=mean)
genderAggM <- aggregate(SATM~gender, data=new_cleaned, FUN=mean)
bothAggR <- aggregate(SATR~gender+ethnicity, data=new_cleaned, FUN=mean)
ethAggR <- aggregate(SATR~ethnicity, data=new_cleaned, FUN=mean)
genderAggR <- aggregate(SATR~gender, data=new_cleaned, FUN=mean)
for(i in 1:nrow(new_cleaned)){
satmNA <- is.na(new_cleaned$SATM[i]) | (new_cleaned$SATM[i]) > 800
satrNA <- is.na(new_cleaned$SATR[i]) | (new_cleaned$SATR[i]) > 800
ethNA <- is.na(new_cleaned$ethnicity[i])
genNA <- is.na(new_cleaned$gender[i])
if(genNA){
if(satmNA){
new_cleaned$SATM[i] <- ethAggM[new_cleaned$ethnicity[i], 2]
}
if(satrNA){
new_cleaned$SATR[i] <- ethAggR[new_cleaned$ethnicity[i], 2]
}
}
if(ethNA){
if(satmNA){
new_cleaned$SATM[i] <- genderAggM[new_cleaned$gender[i], 2]
}
if(satrNA){
new_cleaned$SATR[i] <- genderAggR[new_cleaned$gender[i], 2]
}
}
if(!(genNA | ethNA)){
if(satmNA){
new_cleaned$SATM[i] <- bothAggM[new_cleaned$gender[i], 3]
}
if(satrNA){
new_cleaned$SATR[i] <- bothAggR[new_cleaned$gender[i], 3]
}
}
}
new_cleaned
new_cleaned <- cleaned_sat[(is.na(cleaned_sat$SATM) | (cleaned_sat$SATM <= 800 & cleaned_sat$SATM >= 200)) & (is.na(cleaned_sat$SATR) | (cleaned_sat$SATR <= 800 & cleaned_sat$SATR >= 200)),]
bothAggM <- aggregate(SATM~gender+ethnicity, data=new_cleaned, FUN=mean)
ethAggM <- aggregate(SATM~ethnicity, data=new_cleaned, FUN=mean)
genderAggM <- aggregate(SATM~gender, data=new_cleaned, FUN=mean)
bothAggR <- aggregate(SATR~gender+ethnicity, data=new_cleaned, FUN=mean)
ethAggR <- aggregate(SATR~ethnicity, data=new_cleaned, FUN=mean)
genderAggR <- aggregate(SATR~gender, data=new_cleaned, FUN=mean)
for(i in 1:nrow(new_cleaned)){
satmNA <- is.na(new_cleaned$SATM[i]) | (new_cleaned$SATM[i]) > 800 | new_cleaned$SATM[i] < 200
satrNA <- is.na(new_cleaned$SATR[i]) | (new_cleaned$SATR[i]) > 800 | new_cleaned$SATM[i] < 200
ethNA <- is.na(new_cleaned$ethnicity[i])
genNA <- is.na(new_cleaned$gender[i])
if(genNA){
if(satmNA){
new_cleaned$SATM[i] <- ethAggM[new_cleaned$ethnicity[i], 2]
}
if(satrNA){
new_cleaned$SATR[i] <- ethAggR[new_cleaned$ethnicity[i], 2]
}
}
if(ethNA){
if(satmNA){
new_cleaned$SATM[i] <- genderAggM[new_cleaned$gender[i], 2]
}
if(satrNA){
new_cleaned$SATR[i] <- genderAggR[new_cleaned$gender[i], 2]
}
}
if(!(genNA | ethNA)){
if(satmNA){
new_cleaned$SATM[i] <- bothAggM[new_cleaned$gender[i], 3]
}
if(satrNA){
new_cleaned$SATR[i] <- bothAggR[new_cleaned$gender[i], 3]
}
}
}
for(i in 1:nrow(new_cleaned)){
satmNA <- is.na(new_cleaned$SATM[i]) | (new_cleaned$SATM[i]) > 800
satrNA <- is.na(new_cleaned$SATR[i]) | (new_cleaned$SATR[i]) > 800
ethNA <- is.na(new_cleaned$ethnicity[i])
genNA <- is.na(new_cleaned$gender[i])
if(genNA){
if(satmNA){
new_cleaned$SATM[i] <- ethAggM[new_cleaned$ethnicity[i], 2]
}
if(satrNA){
new_cleaned$SATR[i] <- ethAggR[new_cleaned$ethnicity[i], 2]
}
}
if(ethNA){
if(satmNA){
new_cleaned$SATM[i] <- genderAggM[new_cleaned$gender[i], 2]
}
if(satrNA){
new_cleaned$SATR[i] <- genderAggR[new_cleaned$gender[i], 2]
}
}
if(!(genNA | ethNA)){
if(satmNA){
new_cleaned$SATM[i] <- bothAggM[new_cleaned$gender[i], 3]
}
if(satrNA){
new_cleaned$SATR[i] <- bothAggR[new_cleaned$gender[i], 3]
}
}
}
new_cleaned
new_cleaned$SAT_TOT <- new_cleaned$SATM + new_cleaned$SATR
bothAggM
barplot(bothAggM)
barplot(bothAggM,3)
barplot(bothAggM[],3])
barplot(bothAggM[,3])
mean(new_cleaned$SAT_TOT)
bothAggR <- aggregate(SAT_TOT~gender+ethnicity, data=new_cleaned, FUN=mean)
bothAggR
order(SAT_TOT)
order(bothAggR$SAT_TOT)
-order(bothAggR$SAT_TOT)
order(- bothAggR$SAT_TOT)
bothAggR[order(- bothAggR$SAT_TOT),]
bothAgg <- aggregate(SAT_TOT~gender+ethnicity, data=new_cleaned, FUN=mean)
bothAggM <- aggregate(SATM~gender+ethnicity, data=new_cleaned, FUN=mean)
bothAggR <- aggregate(SATR~gender+ethnicity, data=new_cleaned, FUN=mean)
bothAgg
bothAggM
bothAggR[order(- bothAggR$SAT_TOT),]
bothAggR[order(- bothAggR$SATR),]
bothAggM[order(- bothAggM$SATM),]
ethAggR
genAggR
genderAggR
mean(new_cleaned$SATR)
genAggM
genderAggM
genderAggR
ethAggM
mean(new_cleaned$SATM)
755 - 716
lm(SAT_TOT~as.factor(ethnicity)+as.factor(gender), data=new_cleaned)
summary(lm(SAT_TOT~as.factor(ethnicity)+as.factor(gender), data=new_cleaned))
summary(lm(SAT_TOT~as.factor(ethnicity)+as.factor(gender), data=new_cleaned))
summary(lm(SAT_TOT~as.factor(ethnicity)+as.factor(gender) + as.factor(ethnicity):as.factor(gender), data=new_cleaned))
summary(lm(SAT_TOT~as.factor(ethnicity):as.factor(gender), data=new_cleaned))
summary(lm(SAT_TOT~as.factor(ethnicity):as.factor(gender), data=new_cleaned))
summary(lm(SAT_TOT~as.factor(ethnicity):as.factor(gender)+as.factor(ethnicity)+as.factor(gender), data=new_cleaned))
summary(lm(SAT_TOT~as.factor(ethnicity):as.factor(gender)+as.factor(ethnicity)+as.factor(gender), data=new_cleaned))
summary(lm(SAT_TOT~as.factor(ethnicity)+as.factor(gender), data=new_cleaned))
fit1 <- (lm(SAT_TOT~as.factor(ethnicity)+as.factor(gender), data=new_cleaned))
fit2 <- (lm(SAT_TOT~as.factor(ethnicity):as.factor(gender), data=new_cleaned))
anova(fit1, fit2)
summary(fit1)
summary(fit2)
summary(fit1)
summary(fit2)
fit1 <- (lm(SAT_TOT~as.factor(ethnicity)+as.factor(gender) + as.factor(ethnicity)*as.factor(gender), data=new_cleaned))
summary(fit1)
aggregate(SAT_TOT~gender, data=new_cleaned)
aggregate(SAT_TOT~gender, data=new_cleaned, FUN=mean)
inSeriesV <- c(22.0,28.7, 16.2, 11.8, 7.3, 26.0)
inSeriesI <- c(133.8,174.2,96.3,71.8,44.4,158.2)
inSeries <- cbind(inSeriesV, inSeriesI)
head(inSeries)
mod1 <- lm(inSeriesV~ 1 / inSeriesI, data=inSeries)
mod1 <- lm(inSeriesV~ 1 / inSeriesI, data=data.frame(inSeries))
summary(mod1)
plot(inSeries[,1], inSeries[2])
plot(inSeries[,1], inSeries[,2])
plot(inSeries[,1], inSeries[,2])
mod1 <- lm(inSeriesV~ inSeriesI, data=data.frame(inSeries))
abline(mod1)
plot(inSeries[,2], inSeries[,1])
mod1 <- lm(inSeriesV~ inSeriesI, data=data.frame(inSeries))
abline(mod1)
plot(1 / inSeriesI, inSeriesV, main = "Voltage vs. Current - Resistors in Series", )
plot(inSeriesI, inSeriesV, main = "Voltage vs. Current - Resistors in Series", )
mod1 <- lm(inSeriesV~ inSeriesI)
abline(mod1)
summary(mod1)
plot(inSeriesI, inSeriesV, main = "Voltage vs. Current - Resistors in Series",
xlab = "Current (A)", ylab = "Voltage (V)"
)
mod1 <- lm(inSeriesV~ inSeriesI)
abline(mod1)
(1/100 )+(1/56)
1 / ((1/100 )+(1/56))
inPV <- c(3.5,8.4,10,13.1,17.5,21.3)
inPI <- c(.09, .23,.27,.35, .47, .57)
plot(inPI, inPV, main = "Voltage vs. Current - Resistors in Series",
xlab = "Current (A)", ylab = "Voltage (V)"
)
plot(inPI, inPV, main = "Voltage vs. Current - Resistors in Parallel",
xlab = "Current (A)", ylab = "Voltage (V)"
)
mod1 <- lm(inPV~ inPI)
abline(mod1)
summary(mod1)
156-164.2
(156-164.2) / 156
(35.9 - 37.3)/35.9
read.csv("Documents/Misc/scores.csv")
scores <- read.csv("Documents/Misc/scores.csv")
scores$PtsW %% 10
digL <- scores$PtsL %% 10
digW <- scores$PtsW %% 10
digL <- scores$PtsL %% 10
counts <- scores$Count
rbind(digW, digL, counts)
cbind(digW, digL, counts)
values <- cbind(digW, digL, counts)
aggregate(counts~digW+digL, data=values, FUN=sum)
aggCounts <- aggregate(counts~digW+digL, data=values, FUN=sum)
order(aggCounts$counts)
aggCounts[order(aggCounts$counts),]
aggCounts$pctTotal <- aggCounts$counts / sum(aggCounts$counts)
aggCounts[order(aggCounts$counts),]
sum(aggCounts$counts)
sum(aggCounts$counts) / (16*32)
sum(aggCounts$counts) / ((16*32) + 11)
mtcars
write.csv(mtcars, "mtcars.csv", row.names = F)
?mtcars
?rnorm
z <- 1 + 2 * x1 + 3 * x2
x1 <- rnorm(n, mean=0, sd=1)
set.seed(73)
n <- 1000
x1 <- rnorm(n, mean=0, sd=1)
x2 <- rnorm(n, mean=0, sd=1)
z <- 1 + 2 * x1 + 3 * x2
logistic <- function(z){(1 + exp(-z)) ^ -1}
y <- logistic(z)
y[logistic(z) <= .5] <- 0
y <- as.factor(y)
glm(y~x1 + x2, family = binomial(link='logit'))
y
y[logistic(z) > .5] <- 1
y[logistic(z) <= .5] <- 0
y <- as.factor(y)
y
y[logistic(z) > .5] <- 1
y[logistic(z) <= .5] <- 0
y <- logistic(z)
y[logistic(z) > .5] <- 1
y[logistic(z) <= .5] <- 0
t
y
y <- as.factor(y)
y
glm(y~x1 + x2, family = binomial(link='logit'))
y
table(y)
z
hist(logistic(z))
mean(logistic(z) > 5)
mean(logistic(z) > .5)
set.seed(73)
n <- 1000
x1 <- rnorm(n, mean=0, sd=1)
x2 <- rnorm(n, mean=0, sd=1)
z <- 1 + 2 * x1 + 3 * x2
y <- logistic(z)
y[logistic(z) > .5] <- 1
y[logistic(z) <= .5] <- 0
y <- as.factor(y)
y
table(y)
glm(y~x1 + x2, family = binomial(link='logit'))
sumary(glm(y~x1 + x2, family = binomial(link='logit')))
summary(glm(y~x1 + x2, family = binomial(link='logit')))
?glm
plot(x1, x2)
plot(z, y)
logistic(1)
logistic(.5)
logistic(.3)
logistic(.2)
logistic(.1)
logistic(.01)
hist(z)
logistic(0)
summary(glm(y~x1 + x2, family = binomial(link='logit')))
y[sample(1:length(y))]
y[sample(1:length(y), 4)]
y[sample(1:length(y), 10)] <- 0
summary(glm(y~x1 + x2, family = binomial(link='logit')))
7.244 / 4
n <- 100000
x1 <- rnorm(n, mean=0, sd=1)
x2 <- rnorm(n, mean=0, sd=1)
z <- 1 + 2 * x1 + 3 * x2
y <- logistic(z)
y[logistic(z) > .5] <- 1
y[logistic(z) <= .5] <- 0
y[sample(1:length(y), 10)] <- 0
summary(glm(y~x1 + x2, family = binomial(link='logit')))
summary(glm(y~x1 * x2,  family = binomial(link='logit')))
n <- 10000000
x1 <- rnorm(n, mean=0, sd=1)
x2 <- rnorm(n, mean=0, sd=1)
z <- 1 + 2 * x1 + 3 * x2
y <- logistic(z)
y[logistic(z) > .5] <- 1
y[logistic(z) <= .5] <- 0
y[sample(1:length(y), 10)] <- 0
summary(glm(y~x1 * x2,  family = binomial(link='logit')))
summary(glm(y~x1 * x2,  family = binomial(link='logit')))
setwd("~/Documents/JHU/compstats/Module2")
x <- c(28, 33, 22, 35)
3 - x
theta_space <- seq(20, 35, .25)
sapply(theta_space, function(theta){s_p(theta, x)})
x <- c(28, 33, 22, 35)
s_p <- function(theta, x){
return(sum((theta - x) ^ 2))
}
theta_space <- seq(20, 35, .25)
sapply(theta_space, function(theta){s_p(theta, x)})
plot(theta_space, s_p(theta_space, x))
plot(theta_space, s_p_theta_space)
s_p_theta_space <- sapply(theta_space, function(theta){s_p(theta, x)})
plot(theta_space, s_p_theta_space)
plot(theta_space, s_p_theta_space, 'l)
x <- c(28, 33, 22, 35)
s_p <- function(theta, x){
return(sum((theta - x) ^ 2))
}
theta_space <- seq(20, 35, .25)
s_p_theta_space <- sapply(theta_space, function(theta){s_p(theta, x)})
plot(theta_space, s_p_theta_space, 'l')
x <- c(28, 33, 22, 35)
s_p <- function(theta, x){
return(sum((theta - x) ^ 2))
}
theta_space <- seq(20, 35, .25)
s_p_theta_space <- sapply(theta_space, function(theta){s_p(theta, x)})
plot(theta_space, s_p_theta_space, 'l')
